version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: bash -c "./run_web_service.sh"
    volumes:
      - static_volume:/home/vsf/web/staticfiles
    expose:
      - 8000
    env_file:
      - ./.env.prod
    depends_on:
      - db
      - scrapyd
  scrapyd:
    build: 
      context: .
      dockerfile: scrapyd/Dockerfile
    ports:
      - "6800:6800"
    volumes:
      - ./data:/var/lib/scrapyd
    hostname: scrapyd
    env_file:
      - ./.env.prod
    restart: unless-stopped
  db:
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db
    hostname: postgres
  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/vsf/web/staticfiles
    ports:
      - 1337:80
    depends_on:
      - web
  redis:
    image: redis:alpine
  celery:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: celery -A noticias_sin_filtro_server worker -l info -s /tmp/celerybeat-schedule
    volumes:
      - ./:/home/vsf/web
    env_file:
      - .env.prod
    depends_on:
      - redis
    restart: unless-stopped
  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: sleep 60 && celery -A noticias_sin_filtro_server beat -l info -s /tmp/celerybeat-schedule
    volumes:
      - ./:/home/vsf/web
    env_file:
      - .env.prod
    depends_on:
      - redis
    restart: unless-stopped

volumes:
  postgres_data:
  static_volume: